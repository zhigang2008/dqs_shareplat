<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="Role">

	<resultMap id="RM.Role" type="com.steven.core.model.Role">
        <result property="roleId" column="ROLE_ID"/>
        <result property="roleName" column="ROLE_NAME"/>
        <result property="roleDesc" column="ROLE_DESC"/>
        <result property="priority" column="PRIORITY"/>
        <result property="status" column="STATUS"/>
        <collection property="roleModules" column="ROLE_ID" javaType="java.util.HashSet" ofType="com.steven.core.model.RoleModule" select="RoleModule.getRoleModuleByRoleId"/>
        <collection property="rolePermissions" column="ROLE_ID" javaType="java.util.HashSet" ofType="com.steven.core.model.RolePermission" select="RolePermission.getRolePermissionByRoleId"/>
        
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="Role.columns">
	    <![CDATA[
		ROLE_ID,ROLE_NAME,ROLE_DESC,PRIORITY,STATUS
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="Role.insert" >
    <![CDATA[
        INSERT INTO T_SYS_ROLE (
        	ROLE_ID ,
        	ROLE_NAME ,
        	ROLE_DESC ,
        	PRIORITY ,
        	STATUS 
        ) VALUES (
        	#{roleId,jdbcType=INTEGER} ,
        	#{roleName,jdbcType=VARCHAR} ,
        	#{roleDesc,jdbcType=VARCHAR} ,
        	#{priority,jdbcType=INTEGER} ,
        	#{status,jdbcType=BIT} 
        )
    ]]>
		<!--oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL -->
			
		<selectKey resultType="java.lang.Integer" order="BEFORE" keyProperty="roleId">
			SELECT S_T_SYS_ROLE.nextval  FROM DUAL 
        </selectKey>
	</insert>
    
	<update id="Role.update" >
    <![CDATA[
        UPDATE T_SYS_ROLE SET
	        ROLE_NAME = #{roleName,jdbcType=VARCHAR} ,
	        ROLE_DESC = #{roleDesc,jdbcType=VARCHAR} ,
	        PRIORITY = #{priority,jdbcType=INTEGER} ,
	        STATUS = #{status,jdbcType=BIT} 
        WHERE 
	        ROLE_ID = #{roleId} 
    ]]>
	</update>

    <delete id="Role.delete">
    <![CDATA[
        DELETE FROM T_SYS_ROLE WHERE
        ROLE_ID = #{id} 
    ]]>
    </delete>
    
    <select id="Role.getById" resultMap="RM.Role">
		SELECT <include refid="Role.columns" />
	    <![CDATA[
		    FROM T_SYS_ROLE 
	        WHERE 
		        ROLE_ID = #{id} 
	    ]]>
	</select>
	<!-- 不建议,仅提供给数据量较少的基表查询 -->
	 <select id="Role.findAll" resultMap="RM.Role">
		SELECT <include refid="Role.columns" />
	    <![CDATA[
		    FROM T_SYS_ROLE 
	    ]]>
	</select>
		<!-- 基础代码 -->
	 <select id="Role.baseCode" resultMap="RM.Role">
		SELECT <include refid="Role.columns" />
	    <![CDATA[
		    FROM T_SYS_ROLE 
		    where status=1 
	    ]]>
	</select>
	<sql id="Role.findPage.where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(roleId)">
				AND ROLE_ID = #{roleId}
			</if>
	       <if test="@Ognl@isNotEmpty(roleName)">
				AND ROLE_NAME like '%'||#{roleName}||'%'
			</if>
	       <if test="@Ognl@isNotEmpty(roleDesc)">
				AND ROLE_DESC like '%'||#{roleDesc}||'%'
			</if>
	       <if test="@Ognl@isNotEmpty(priority)">
				AND PRIORITY = #{priority}
			</if>
	       <if test="@Ognl@isNotEmpty(status)">
				AND STATUS = #{status}
			</if>
		</where>
	</sql>
		
    <select id="Role.findPage.count" resultType="long">
        SELECT count(*) FROM T_SYS_ROLE 
		<include refid="Role.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="Role.findPage" resultMap="RM.Role">
    	SELECT <include refid="Role.columns" />
	    FROM T_SYS_ROLE 
		<include refid="Role.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
    <!-- 根据角色查询所有权限 -->
    <select id="Role.getPermissionByRole" resultMap="RM.Permission">
		<![CDATA[
		SELECT P.ID ID,CODE,DESCRIPTION,STATUS
		    FROM 
		    T_SYS_PERMISSION P,
		    T_SYS_ROLE_PERMISSION RP 
		    WHERE 
		    RP.PERMISSION_ID=P.ID AND
		    RP.ROLE_ID=#{roleId} 
		    ORDER BY CODE
	    ]]>
	</select>
	 <!-- 查询角色为拥有的权限 -->
    <select id="Role.getNotOwnPermissionByRole" resultMap="RM.Permission">
		<![CDATA[
		SELECT ID,CODE,DESCRIPTION,STATUS
		FROM T_SYS_PERMISSION P 
		WHERE NOT EXISTS 
	       (
	        SELECT * 
		    FROM 
		    T_SYS_ROLE_PERMISSION RP 
		    WHERE 
		    RP.PERMISSION_ID=P.ID AND
		    RP.ROLE_ID=#{roleId} 
		    ) 
		  ORDER BY CODE
	    ]]>
	</select>
</mapper>

